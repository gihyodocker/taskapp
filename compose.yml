version: '3.9'
services:

  mysql:
    build:
      context: ./containers/mysql
    environment:
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/mysql_root_password
      MYSQL_DATABASE: taskapp
      MYSQL_USER: taskapp_user
      MYSQL_PASSWORD_FILE: /run/secrets/mysql_user_password
    secrets:
      - mysql_root_password
      - mysql_user_password
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "3306:3306"

  migrator:
    build:
      context: ./containers/migrator
    depends_on:
      - mysql
    environment:
      DB_HOST: mysql
      DB_NAME: taskapp
      DB_PORT: "3306"
      DB_USERNAME: taskapp_user
    command: >
        sh -c '
            DB_PASSWORD=$(cat /run/secrets/mysql_user_password)
            bash /migrator/migrate.sh $$DB_HOST $$DB_PORT $$DB_NAME $$DB_USERNAME $$DB_PASSWORD up
        '
    secrets:
      - mysql_user_password

  api:
    build:
      context: .
      dockerfile: ./containers/api/Dockerfile
    depends_on:
      - mysql
    healthcheck:
      test: "curl -f http://localhost:8180/healthz || exit 1"
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 30s
    command:
      - "server"
      - "--config-file=/run/secrets/api_config"
    secrets:
      - api_config

  nginx-api:
    build:
      context: ./containers/nginx-api
    depends_on:
      api:
        condition: service_healthy
    healthcheck:
      test: "curl -H 'Host: api' -f http://localhost:80/healthz || exit 1"
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 30s
    environment:
      NGINX_PORT: 80
      SERVER_NAME: api
      BACKEND_HOST: api:8180
      BACKEND_MAX_FAILS: 3
      BACKEND_FAIL_TIMEOUT: 10s
    ports:
      - "9180:80"

  web:
    build:
      context: .
      dockerfile: ./containers/web/Dockerfile
    depends_on:
      - nginx-api
    healthcheck:
      test: "curl -f http://localhost:8280/healthz || exit 1"
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 30s
    command:
      - "server"
      - "--api-address=http://nginx-api:80"
    volumes:
      - assets_data:/go/src/github.com/gihyodocker/taskapp/assets

  nginx-web:
    build:
      context: ./containers/nginx-web
    depends_on:
      web:
        condition: service_healthy
    healthcheck:
      test: "curl -H 'Host: api' -f http://localhost:80/healthz || exit 1"
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 30s
    environment:
      NGINX_PORT: 80
      SERVER_NAME: localhost
      ASSETS_DIR: /var/www/assets
      BACKEND_HOST: web:8280
      BACKEND_MAX_FAILS: 3
      BACKEND_FAIL_TIMEOUT: 10s
    ports:
      - "9280:80"
    volumes:
      - assets_data:/var/www/assets

secrets:
  mysql_root_password:
    file: ./secrets/mysql_root_password
  mysql_user_password:
    file: ./secrets/mysql_user_password
  api_config:
    file: ./api-config-compose.yaml

volumes:
  mysql_data:
  assets_data:
